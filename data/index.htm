<!DOCTYPE html>
<html>
  <head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta http-equiv="Content-type" content="text/html; charset=utf-8">
    <title>GhettoBlaster Console</title>
    <style type="text/css" media="screen">
    body {
      margin:0;
      padding:0;
      background-color: black;
    }
    
    .ghetto-box {
      width: 100vw;
      height: 60vw;
      background-image: url(ghetto_blaster.jpg);
      background-repeat: no-repeat;
      background-position: center top;
      background-size: 100% auto;
      display: flex;
      flex-direction: row;
      align-content: center;
      max-width: 750px;
      margin: auto;
    }
    
    .ghetto-box button {
      flex: 1;
      height: 10%;
      align-self: flex-end;
      opacity: 1;
      background-color: transparent;
      color: transparent;
    }
    

    #dbg, #input_div, #input_el {
      font-family: monaco;
      color: #AAA;
    }

    #dbg, #input_div {
      margin:0;
      padding:0;
      padding-left:4px;
    }

    #input_el {
      width:98%;
      background-color: rgba(0,0,0,0);
      border: 0px;
    }
    #input_el:focus {
      outline: none;
    }

    </style>
    <script type="text/javascript">
    var ws = null, debug = false;
    function ge(s){ return document.getElementById(s);}
    function ce(s){ return document.createElement(s);}
    //function stb(){ /*window.scrollTo(0, document.body.scrollHeight || document.documentElement.scrollHeight);*/ }
    function sendBlob(str){
      var buf = new Uint8Array(str.length);
      for (var i = 0; i < str.length; ++i) buf[i] = str.charCodeAt(i);
      ws.send(buf);
    }
    function addMessage(m){
      var msg = ce("div");
      msg.innerText = m;
      ge("dbg").appendChild(msg);
      //stb();
    }
    function startSocket(){
      ws = new WebSocket('ws://'+document.location.host+'/ws',['arduino']);
      ws.binaryType = "arraybuffer";
      ws.onopen = function(e){
        addMessage("Connected");
      };
      ws.onclose = function(e){
        addMessage("Disconnected");
      };
      ws.onerror = function(e){
        console.log("ws error", e);
        addMessage("Error");
      };
      ws.onmessage = function(e){
        var msg = "";
        if(e.data instanceof ArrayBuffer){
          msg = "BIN:";
          var bytes = new Uint8Array(e.data);
          for (var i = 0; i < bytes.length; i++) {
            msg += String.fromCharCode(bytes[i]);
          }
        } else {
          msg = "TXT:"+e.data;
        }
        if(debug) addMessage(msg);
      };
      ge("input_el").onkeydown = function(e){
        //stb();
        if(e.keyCode == 13 && ge("input_el").value != ""){
          ws.send(ge("input_el").value);
          ge("input_el").value = "";
        }
      }
      
      ge('up').onclick = function(e) {
        ws.send('rotaryup');
      }
      ge('down').onclick = function(e) {
        ws.send('rotarydown');
      }
      ge('click').onclick = function(e) {
        ws.send('rotaryclick');
      }
    }
    
    function startEvents(){
      var es = new EventSource('/events');
      es.onopen = function(e) {
        if(debug) addMessage("Socket opened");
      };
      es.onerror = function(e) {
        if (e.target.readyState != EventSource.OPEN) {
          addMessage("ERR: Socket Closed");
        }
      };
      es.onmessage = function(e) {
        if(debug) addMessage("Message: " + e.data);
      };
      es.addEventListener('ota', function(e) {
        if(debug) addMessage("Event[ota]: " + e.data);
      }, false);
    }
    function onBodyLoad(){
      startSocket();
      startEvents();
    }
    </script>
  </head>
  <body id="body" onload="onBodyLoad()">
  
  <div class="ghetto-box">
    <button id="down">&lt;-</button>
    <button id="click"> O </button>
    <button id="up">&gt;-</button>
  </div>
    <pre id="dbg"></pre>
    <div id="input_div">
      $<input type="text" value="" id="input_el">
    </div>
  </body>
</html>
